package structuredBinarySearch;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;

public class createtheList {

	private static Scanner scanner;
	static List<Integer> enteries = new ArrayList<Integer>();
		
	public static boolean isStringInt(String s)
	{
	    try
	    {
	        Integer.parseInt(s);
	        return true;
	    } catch (NumberFormatException ex)
	    {
	        return false;
	    }
	}
	
		
	public static void createList (String[] args) 
	
	{
			
		// enter a row of numbers
		System.out.println("Enter your own amount of numbers to a list. Press 'enter' after every number. ");
		System.out.println("Letters will be ignored. Type 'ready' if you are ready. ");
		scanner = new Scanner(System.in);
		String number;	
		int completelist = enteries.size();
		int inumber;
		

				do 
				{ 
					number = scanner.nextLine();
				 //if 
				 // (!number.equalsIgnoreCase("ready"));
				 	{
					// check if they are numbers instead of other values, add as numbers
					if (isStringInt(number)) 
						{ 
						inumber = Integer.parseInt(number);
						enteries.add(inumber);
						}
					else 
						{
						if (!number.equalsIgnoreCase("ready")) 
						{ System.out.println("Sorry only numbers allowed.");}
						}
				while (!number.equalsIgnoreCase("ready"));
				
			
				// check if table is empty
				while  (completelist == 0);
				{ 
				System.out.println("there must be at least 1 number added; please add 1 number and press enter");
				number = scanner.nextLine();
				if (isStringInt(number)) 
					{ 
						inumber = Integer.parseInt(number);
						enteries.add(inumber);
					 }
				else 
					{ System.out.println("Sorry only numbers allowed. do not type READY instead of letter!!!");
					}
				}
				
				
				
				System.out.println("thank you; numbers are added and row is made.");
				
				// sort the list
				Collections.sort(enteries);
					
				// show that its correct
				System.out.println("these are the enteries:" + enteries);
				
							
	}
}


